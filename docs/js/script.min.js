"use strict";const burger=document.querySelector(".burger"),header=document.querySelector(".header"),body=document.querySelector("body");window.addEventListener("load",()=>{}),new Swiper(".swiper",{keyboard:{enabled:!0,onlyInViewport:!0,pageUpDown:!0},spaceBetween:30,slidesPerView:1,loop:!0,effect:"fade",pagination:{el:".swiper-pagination",clickable:!0},breakpoints:{600:{navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
